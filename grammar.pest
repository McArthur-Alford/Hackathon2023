// Building Blocks:
alpha = _{ 'a'..'z' | 'A'..'Z' }
digit = _{ '0'..'9' }
false = { "False" }
true = { "True" }
bool = { false | true }
whitespace = _{ " " | "\t" }
char = _{ ASCII_ALPHA | digit | whitespace | ":" | "!" | "." }
string = _{"'" ~ char+ ~ "'"}
number = _{ digit+ }

// Constants and Identifiers:
ident = _{ (alpha | "_") ~ (alpha | digit | "_")* }
generic = _{ "<" ~ ident ~ ">" }

// Variable
var = { generic }

// Attribute Handle
attr = { "^" ~ ident }

// Literal types
const = { string | digit+ | bool }

// Expressions used in RHS of WME
expr = { var | const | bool | "(" ~ wme ~ ")" }

// Working Memory Element:
wme = { 
	whitespace*
	~ (var | "*")
	~ (
		whitespace*
		~ (attr | ("^*"))
		~ (
			whitespace*
			~ (expr | "*")
		)?
	)?
}

block = {
	wme
	~ (NEWLINE ~ wme)*
}

// Productions:
prod = { 
	ident
	~ ":"
	~ NEWLINE?
	~ block
	~ (
		NEWLINE?
		~ whitespace*
		~ "->"
		~ NEWLINE?
		~ block	
	)?
}

// Entire Program:
file = { 
	SOI 
	~ ( (NEWLINE | whitespace)* ~ prod ~ (NEWLINE | whitespace)* )*
	~ EOI
}